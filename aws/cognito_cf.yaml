---
AWSTemplateFormatVersion: 2010-09-09
Description: CF for cognito resource creation.

Metadata:
  owner: roeland.schumacher@proquest.com

Parameters:
  DynamoDBName:
    Description: Name of DyDB for logging 
    Type: String
    Default: cbgCALogDB

  UserPoolNameNG: # maybe this can;t be a parameter?
    Description: Name of Cognito Userpool
    Type: String
    Default: cbgCAng

Resources:
  cbgCAUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: cbgCAng # needs ref to parameters
      AutoVerifiedAttributes: 
        - email
      Policies: 
        PasswordPolicy: 
          MinimumLength: 6
          RequireLowercase: True
          RequireNumbers: True
          RequireSymbols: False
          RequireUppercase: False


  cbgCAApp:
    Type: AWS::Cognito::UserPoolClient
    Properties:
        ClientName: cbgCAngApp
        GenerateSecret: True
        RefreshTokenValidity: 30
        UserPoolId: !Ref cbgCAUserPool

  cbgCACognitoIDPool:
      Type: AWS::Cognito::IdentityPool
      Properties:
        IdentityPoolName: cbgCAUserIDPool
        AllowUnauthenticatedIdentities: True
        CognitoIdentityProviders: 
        - ClientId:
            Ref: cbgCAApp
          ProviderName:
            Fn::Join:
            - ""
            - - cognito-idp.
              - Ref: "AWS::Region"
              - .amazonaws.com/
              - Ref: cbgCAUserPool

  cbgCAPolicy1:
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName: cbg-CA-policy
      Roles:
      - Ref: cbgCAAimRole
      PolicyDocument: 
        Version: 2012-10-17
        Statement: 
        - Effect: Allow
          Action: 
          - mobileanalytics:PutEvents
          - cognito-sync:*
          Resource: "*"

  cbgCAPolicy2:
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName: cbg-CA-policy
      Roles:
      - Ref: cbgCAAimRole
      PolicyDocument: 
        Version: 2012-10-17
        Statement: 
        - Effect: Allow
          Action:
          - mobileanalytics:PutEvents
          - cognito-sync:*
          - cognito-identity:*
          Resource:
          - "*"

  cbgCAPolicy3:
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName: cbg-CA-policy
      Roles:
      - Ref: cbgCAAimRole
      PolicyDocument: 
        Version: 2012-10-17
        Statement: 
        - Effect: Allow
          Action:
          - dynamodb:GetItem
          - dynamodb:BatchGetItem
          - dynamodb:Query
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
          Resource:
          - "*" # needs arn
          Condition:
            ForAllValues:StringEquals:
              dynamodb:LeadingKeys:
              - "${cognito-identity.amazonaws.com:sub}"

  cbgCAAimRole:
    Type: AWS::IAM::Role
    Properties: 
      RoleName: cbg-ca-role
      AssumeRolePolicyDocument: 
        Version: 2012-10-17
        Statement: 
        - Effect: Allow
          Principal: 
            Service: 
            - ec2.amazonaws.com
          Action: 
          - sts:AssumeRole

  dydbTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: activityDate
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH 
        - AttributeName: activityDate
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: cbgCALogTable

  s3bucket:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: cbgcabucket1221
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  s3bucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties: 
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref s3bucket
                - /*
      Bucket: !Ref s3bucket

Outputs:
  poolId:
    Description: ARN with UserPool ID
    Value: 
      Fn::GetAtt:
      - cbgCAUserPool
      - Arn

  poolAppId:
    Description: UserPool App Id / Client ID
    Value: 
      Ref: cbgCAApp

  WebsiteURL:
    Value: !GetAtt 
      - s3bucket
      - WebsiteURL
    Description: URL for website hosted on S3
